{"version":3,"sources":["app.ts","configuration.ts","environment.ts","main.ts","navbar.ts","issues/enums.ts","helpers/enum-ext.ts","helpers/converters.ts","home/index.ts","issues/index.ts","issues/Models/Issue.ts","issues/new.ts","issues/show.ts","resources/index.ts","C:/programowanie/git/aviloxcore/src/aviloxfront/src/app.html","C:/programowanie/git/aviloxcore/src/aviloxfront/src/styles/main.css","C:/programowanie/git/aviloxcore/src/aviloxfront/src/navbar.html","C:/programowanie/git/aviloxcore/src/aviloxfront/src/home/index.html","C:/programowanie/git/aviloxcore/src/aviloxfront/src/issues/index.html","C:/programowanie/git/aviloxcore/src/aviloxfront/src/issues/new.html","C:/programowanie/git/aviloxcore/src/aviloxfront/src/issues/show.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Router} from 'aurelia-router'\r\n\r\nexport class App {\r\n    router: Router;\r\n\r\n    configureRouter(config, router) {\r\n\r\n        config.title = 'Aurelia';\r\n        config.map([\r\n            {route: ['', 'home'], name: 'home', moduleId: 'home/index', nav: true, title: 'Home'},\r\n            {route: 'issues', name: 'issues', moduleId: 'issues/index', nav: true, title: 'Issues'},\r\n            {route: 'issues/:id', name: 'issueShow', moduleId: 'issues/show', nav: false, title: 'Show issue'},\r\n            {route: 'issues/new', name: 'issuesNew', moduleId: 'issues/new', nav: true, title: 'New Issue'}\r\n        ]);\r\n\r\n        this.router = router;\r\n    }\r\n}\r\n","/**\r\n * Created by matgi on 05.08.2016.\r\n */\r\n\r\nimport {HttpClient} from \"aurelia-fetch-client\";\r\n\r\nexport class Configuration {\r\n    public static apiUrl: string = \"https://aviloxcore.azurewebsites.net/\";\r\n    //public static apiUrl: string = \"http://localhost:5000/\";\r\n\r\n    public static Configure(http: HttpClient) {\r\n        http.configure(cfg => {\r\n            cfg\r\n                .useStandardConfiguration()\r\n                .withBaseUrl(this.apiUrl)\r\n                .withDefaults({\r\n                    headers: {\r\n                        'X-Requested-With': 'Fetch',\r\n                        'Access-Control-Allow-Origin': '*'\r\n                    }\r\n                })\r\n        });\r\n    }\r\n}","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import {Aurelia} from 'aurelia-framework'\r\nimport environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\n//Note: You may want to use environment-specific configuration.\r\n(<any>Promise).config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import {bindable} from 'aurelia-framework';\r\n\r\nexport class Navbar {\r\n    @bindable router;\r\n}","\r\nexport enum IssueType {\r\n    Unknown = 0,\r\n    Bug = 10,\r\n    Feature = 20,\r\n    Proposal = 30\r\n}","import {IssueType} from \"../issues/enums\";\r\n\r\nexport interface IEnumTypes {\r\n    name: string;\r\n    value: number;\r\n}\r\n\r\nexport class EnumExt {\r\n    static getNamesAndValues(e: any): IEnumTypes[] {\r\n        return this.getNames(e).map(n => { return { name: n, value: e[n] as number }; });\r\n    }\r\n\r\n    static getNames(e: any): string[] {\r\n        return this.getObjValues(e).filter(v => typeof v === \"string\") as string[];\r\n    }\r\n\r\n    static getValues(e: any): number[] {\r\n        return this.getObjValues(e).filter(v => typeof v === \"number\") as number[];\r\n    }\r\n\r\n    private static getObjValues(e: any): (number | string)[] {\r\n        return Object.keys(e).map(k => e[k]);\r\n    }\r\n\r\n    static getName(val: number): string {\r\n        let maps = this.getNamesAndValues(IssueType);\r\n        let elPos = maps.map(x => x.value).indexOf(val);\r\n        return maps[elPos].name;\r\n    }\r\n}\r\n","import { EnumExt } from \"./enum-ext\";\r\n\r\nexport class IssueTypeFormatValueConverter {\r\n    toView(value) {\r\n        return EnumExt.getName(value);\r\n    }\r\n}\r\n\r\nexport class TimeElapsedSinceNowValueConverter {\r\n    toView(value: string) {\r\n        let lValue = new Date(value);\r\n        let now: number = new Date().getTime();\r\n        let diff = Math.round((now - lValue.getTime()) / 1000);\r\n\r\n        let time: number;\r\n        let unit: string;\r\n\r\n        if (diff < 60) {\r\n            time = diff; unit = \"seconds\";\r\n        }\r\n        else if (diff < 3600) {\r\n            time = Math.round(diff / 60); unit = \"minutes\";\r\n        }\r\n        else if (diff < 3600 * 24) {\r\n            time = Math.round(diff / 3600); unit = \"hours\";\r\n        }\r\n        else {\r\n            time = Math.round(diff / (3600 * 24)); unit = \"days\";\r\n        }\r\n\r\n        return `${time} ${unit} ago`;\r\n    }\r\n}\r\n","export class Index {\r\n    message = 'Hello World!';\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { Configuration } from './../configuration';\r\n\r\n@inject(HttpClient, Router)\r\nexport class Index {\r\n    http: HttpClient;\r\n    router: Router;\r\n\r\n    heading = \"Issues\";\r\n    issues = [];\r\n\r\n    constructor(http, router) {\r\n        this.http = http;\r\n        this.router = router;\r\n        Configuration.Configure(this.http);\r\n    }\r\n\r\n    activate() {\r\n        return this.http.fetch('Issues')\r\n            .then(response => response.json())\r\n            .then(res => this.issues = res.issues);\r\n    }\r\n\r\n    delete(id: number): void {\r\n        this.http.fetch('Issues/delete', {\r\n            method: 'post',\r\n            body: json(id)\r\n        });\r\n\r\n        this.issues = this.issues.filter(function (obj) {\r\n            return obj.id !== id;\r\n        })\r\n    }\r\n\r\n    show(id: number): void {\r\n        this.router.navigate(\"issues/\" + id);\r\n    }\r\n}","\r\nimport {IssueType} from \"../enums\";\r\nimport {IEnumTypes, EnumExt} from \"../../helpers/enum-ext\";\r\n\r\nexport interface IIssue {\r\n    title: string;\r\n    text: string;\r\n    issueType: IssueType;\r\n    issueTypes: IEnumTypes[];\r\n}\r\n\r\nexport class Issue implements IIssue {\r\n    title: string;\r\n    text: string;\r\n    issueType: IssueType;\r\n    issueTypes: IEnumTypes[];\r\n\r\n    constructor() {\r\n        this.issueTypes = EnumExt.getNamesAndValues(IssueType);\r\n    }\r\n}","\r\nimport {inject} from \"aurelia-framework\";\r\nimport {HttpClient, json} from \"aurelia-fetch-client\";\r\nimport {Router} from \"aurelia-router\";\r\nimport {Configuration} from './../configuration';\r\nimport {IIssue, Issue} from \"./Models/Issue\";\r\n\r\n@inject(HttpClient, Router)\r\nexport class New {\r\n    http: HttpClient;\r\n    router: Router;\r\n\r\n    heading = \"Issues\";\r\n    model: IIssue = new Issue();\r\n\r\n    constructor(http, router) {\r\n        this.http = http;\r\n        this.router = router;\r\n        Configuration.Configure(this.http);      \r\n    }\r\n\r\n    activate() {\r\n        return \"\";\r\n    }\r\n\r\n    send = () => {\r\n        this.http.fetch(\"Issues/add\", {\r\n            method: \"post\",\r\n            body: json(this.model)\r\n        }).then(res => this.router.navigate(\"issues\"));\r\n    };\r\n}","\r\nimport { inject } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\nimport { Router } from 'aurelia-router';\r\nimport { Configuration } from \"../configuration\";\r\nimport { IIssue } from \"./Models/Issue\";\r\n\r\n@inject(HttpClient, Router)\r\nexport class Show {\r\n    http: HttpClient;\r\n    router: Router;\r\n\r\n    issueId: number;\r\n    issue: IIssue;\r\n    exist: boolean;\r\n\r\n    constructor(httpClient, router) {\r\n        this.http = httpClient;\r\n        this.router = router;\r\n        Configuration.Configure(this.http);\r\n    }\r\n\r\n    activate(params, routeConfig, $navigationInstruction) {\r\n        this.issueId = params.id;\r\n        \r\n        return this.http.fetch('Issues/' + this.issueId)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                this.exist = res.exist;\r\n                this.issue = res.issue;\r\n            });\r\n    }\r\n}","import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  //config.globalResources([]);\r\n}\r\n",null,null,null,null,null,null,null],"sourceRoot":"..\\src"}