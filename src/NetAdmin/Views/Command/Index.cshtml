@using System.Threading.Tasks 
@model NetAdmin.Models.ConnectionModel

<div class="ui left fixed inverted vertical menu">
    <div class="item">
        NetAdmin
    </div>
    <div class="item" id="menu-databases">
        @await Component.InvokeAsync("DatabaseMenu")
    </div>
</div>

<div class="row pusher">
    <div class="col-md-12">
        <form asp-controller="Command" asp-action="GetTableData" data-ajax="true" data-ajax-method="POST" data-ajax-mode="replace"
            data-ajax-update="#tableData" data-ajax-loading="#loading" data-ajax-loading-duration="500" class="ui form">

            <div class="two fields">
                <div class="field">
                    @Html.LabelFor(m => m.Hostname) @Html.TextBoxFor(m => m.Hostname)
                </div>

                <div class="field">
                    @Html.LabelFor(m => m.Database) @Html.TextBoxFor(m => m.Database)
                </div>
            </div>

            <div class="two fields">
                <div class="field">
                    @Html.LabelFor(m => m.Username) @Html.TextBoxFor(m => m.Username)
                </div>

                <div class="field">
                    @Html.LabelFor(m => m.Password) @Html.PasswordFor(m => m.Password)
                </div>
            </div>

            <div class="field">
                @Html.LabelFor(m => m.Query, new {@class = "col-sm-2 form-control"}) @Html.TextAreaFor(m => m.Query, new {@class = "form-control",
                rows = "5"})
            </div>

            <div class="field">
                <button type="submit" class="ui primary button">Execute</button>
                <span id="loading" style="display: none">
                    Executing...
                </span>
            </div>

            <br/>
        </form>

        <div id="tableData">
        </div>

    </div>
</div>
