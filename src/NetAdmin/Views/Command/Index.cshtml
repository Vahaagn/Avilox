@using System.Threading.Tasks
@using NetAdmin.Extensions
@model NetAdmin.Models.ConnectionModel

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Index", "Command", FormMethod.Post, htmlAttributes: new {@class = "ui form"}))
        {
            <div class="two fields">
                <div class="field">
                    @Html.LabelFor(m => m.Hostname)
                    @Html.TextBoxFor(m => m.Hostname)
                </div>

                <div class="field">
                    @Html.LabelFor(m => m.Database)
                    @Html.TextBoxFor(m => m.Database)
                </div>
            </div>

            <div class="two fields">
                <div class="field">
                    @Html.LabelFor(m => m.Username)
                    @Html.TextBoxFor(m => m.Username)
                </div>

                <div class="field">
                    @Html.LabelFor(m => m.Password)
                    @Html.PasswordFor(m => m.Password)
                </div>
            </div>

            <div class="field">
                @Html.LabelFor(m => m.Query, new {@class = "col-sm-2 form-control"})
                @Html.TextAreaFor(m => m.Query, new {@class = "form-control", rows = "5"})
            </div>

            <div class="field">
                <button type="submit" class="ui primary button">Execute</button>
            </div>

            <br/>

            if (Model.Error.HasText())
            {
                <div class="alert alert-danger">
                    <p>Error: </p>
                    <p>@Model.Error</p>
                </div>
            }

            if (Model.Result.HaveItems())
            {
                <div class="overflow-hor">
                    <table class="ui selectable sortable celled table">
                        <thead>
                        <tr>
                            <th class="sorted descending">#</th>
                            @foreach (var name in Model.FieldNames)
                            {
                                <th>@name</th>
                            }
                        </tr>
                        </thead>

                        <tbody>
                        @{ var i = 1; }
                        @foreach (var line in Model.Result)
                        {
                            <tr>
                                <td>@i</td> @{ i++; }
                                @foreach (var field in line)
                                {
                                    <td>@field</td>
                                }
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            }
        }
    </div>
</div>